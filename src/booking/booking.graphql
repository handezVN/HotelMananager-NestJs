input ListRoom {
  roomId: [String!]
}
input ListCustomer {
  ListCustomer: [Customer]
}
input Customer {
  name: String
  address: String
  gen: String
  birthday: String
  number: String
}
input ExtraItem1 {
  roomId: String
  serviceId: String
  name: String
  quantity: Int
  price: Int
}
input ListExtraItem {
  ListExtraItem: [ExtraItem1]
}
type ChartItem {
  labels: [String]
  datasets: [Int]
}
type Query {
  getBookingofHotelFromTo(
    from: String!
    to: String!
    hotelId: String!
  ): [Booking]
  getTotalBookingofHotelFromTo(
    from: String!
    to: String!
    hotelId: String!
  ): ChartItem
}

type Mutation {
  checkInRoom(
    input: ListRoom!
    price: Int!
    totalNight: Int!
    hotelId: String!
    isPayment: Boolean!
    deposit: Int!
  ): RequestMessage
  checkOutRoom(bookingId: String!): RequestMessage
  addCustomer(bookingId: String!, ListCustomer: ListCustomer!): String
  editExtraItem(bookingId: String!, ListExtraItem: ListExtraItem!): String
  cleanRoom(roomId: String!): String
}
type RequestMessage {
  msg: String
  status: Int
  rooms: [String]
  hotelId: String
}

type Subscription {
  RoomStatus(hotelId: String!): RoomStatus
  HelloWorld: Code
}

type RoomStatus {
  isCheckIn: Boolean
  isCheckOut: Boolean
  isClean: Boolean
  roomId: [String]
}
type Code {
  code: String
}
